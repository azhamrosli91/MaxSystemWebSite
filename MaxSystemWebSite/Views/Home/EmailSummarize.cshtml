@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>Email Summarizer</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="https://appsforoffice.microsoft.com/lib/1/hosted/office.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            padding: 10px;
        }

        .tab-pane {
            padding-top: 1rem;
        }

        textarea {
            width: 100%;
            min-height: 150px;
            overflow-y: hidden;
            resize: none;
        }

        #summaryResult, #replyBox {
            white-space: pre-wrap;
        }

        .btn-block {
            width: 100%;
        }

        #emailBody {
            display: none;
        }
    </style>
</head>
<body>
    <h4 class="mb-3">Email Assistant</h4>

    <ul class="nav nav-tabs" id="tabSelector" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="summarize-tab" data-bs-toggle="tab" data-bs-target="#summarizeTab" type="button" role="tab">Summarize</button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="reply-tab" data-bs-toggle="tab" data-bs-target="#replyTab" type="button" role="tab">My Reply</button>
        </li>
    </ul>

    <div class="tab-content">
        <!-- Summarize Tab -->
        <div class="tab-pane fade show active" id="summarizeTab" role="tabpanel">
            <textarea id="emailBody" readonly></textarea>
            <div id="summaryResult" class="mt-3 border rounded p-2 bg-white">Loading and summarizing email...</div>
        </div>

        <!-- Reply Tab -->
        <div class="tab-pane fade" id="replyTab" role="tabpanel">
            <label for="replyBox">Reply</label>
            <textarea id="replyBox" class="form-control mb-2" placeholder="Write your reply here, i will polish for you..."></textarea>
            <small id="copyMsg" class="text-success d-none">Copied to clipboard!</small>

            <div class="d-grid gap-2">
                <button class="btn btn-outline-secondary" id="copyReplyBtn">Copy Reply</button>
                <button class="btn btn-success" id="polishReplyBtn">Polish My Reply</button>
            </div>
        </div>
    </div>

    <script>
        function autoResizeTextarea(textarea) {
            textarea.style.height = 'auto';
            textarea.style.height = (textarea.scrollHeight) + 'px';
        }

        Office.onReady(function (info) {
            if (info.host === Office.HostType.Outlook) {
                Office.context.mailbox.item.body.getAsync("text", function (result) {
                    if (result.status === Office.AsyncResultStatus.Succeeded) {
                        const emailContent = result.value;
                        $('#emailBody').val(emailContent);
                        summarizeEmail(emailContent);
                    } else {
                        $('#summaryResult').text("Failed to load email content.");
                    }
                });
            }
        });

        function summarizeEmail(content) {
                    $('#summaryResult').text("Summarizing...");
                    $.ajax({
                        url: '/Home/SummarizeEmail',
                        method: 'POST',
                        data: { emailBody: content },
                        success: function (response) {
                            $('#summaryResult').text(response.summary);
        
                            // Place the original email in reply box for user to respond manually
                            $('#replyBox').val("");
        
                            // setTimeout(() => {
                            //     $("#polishReplyBtn").click();
                            // }, 100);
        
                        },
                        error: function () {
                            $('#summaryResult').text("Failed to summarize.");
                        }
                    });
                }
        
                $('button[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
            const targetTab = $(e.target).attr('data-bs-target'); // e.g. "#replyTab"
        
            if (targetTab === '#replyTab') {
                const replyBox = document.getElementById('replyBox');
                if (replyBox) {
                    autoResizeTextarea(replyBox);
                }
            }
        });


        $('#polishReplyBtn').on('click', function () {
            const replyText = $('#replyBox').val().trim();
            const userName = Office.context.mailbox.userProfile.displayName;

            $.ajax({
                url: '/Home/ReplyEmailPolish',
                method: 'POST',
                data: {
                    emailBody: replyText,
                    userName: userName
                },
                success: function (response) {
                    $('#replyBox').val(response.polishedText || "Failed to polish email.");
                    autoResizeTextarea(document.getElementById('replyBox'));
                },
                error: function () {
                    alert("Failed to polish email.");
                },
                complete: function () {
                    $('#polishReplyBtn').text('Polish Email').prop('disabled', false);
                }
            });

        });

        $('#copyReplyBtn').on('click', function () {
            const replyText = $('#replyBox').val();
            const copyMsg = $('#copyMsg');
        
            if (!replyText) return;
        
            // Try modern clipboard first
            if (navigator.clipboard && navigator.clipboard.writeText) {
                navigator.clipboard.writeText(replyText)
                    .then(() => {
                        showCopyMessage(copyMsg);
                    })
                    .catch(() => {
                        fallbackCopy(replyText, copyMsg);
                    });
            } else {
                fallbackCopy(replyText, copyMsg);
            }
        });
        
        function fallbackCopy(text, copyMsg) {
            try {
                const textarea = document.createElement('textarea');
                textarea.value = text;
                textarea.setAttribute('readonly', '');
                textarea.style.position = 'absolute';
                textarea.style.left = '-9999px';
                document.body.appendChild(textarea);
        
                textarea.select();
                const success = document.execCommand('copy');
                document.body.removeChild(textarea);
        
                if (success) showCopyMessage(copyMsg);
            } catch (err) {
                console.error("Fallback copy failed:", err);
            }
        }
        
        function showCopyMessage(copyMsg) {
            copyMsg.removeClass('d-none');
            setTimeout(() => copyMsg.addClass('d-none'), 1500);
        }




        document.addEventListener('DOMContentLoaded', function () {
            const replyBox = document.getElementById('replyBox');
            replyBox.addEventListener('input', function () {
                autoResizeTextarea(this);
            });
        });
    </script>
</body>
</html>
