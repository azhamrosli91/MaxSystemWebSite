<style>
    .page-align-top {
        align-self: flex-start !important;
        width: 100%;
    }
</style>
<div class="page-align-top w-100">
    <div class="w-100">
        <div class="row align-items-center justify-content-between g-3 mt-3">
            <div class="col-auto">
                <h2 class="mb-0">Configure Connector</h2>
            </div>
            <div class="col-auto">
                <div class="row g-3">
      @*               <div class="col-auto">
                        <a class="btn btn-success" href="../AiResume/Shortlisted"><span class="fas fa-check me-2"></span>Shortlisted</a>
                    </div> *@
                    <div class="col-auto">
                        <!-- Button trigger -->
                        <button type="button"
                                class="btn btn-primary"
                                data-bs-toggle="modal"
                                data-bs-target="#connectorModal">
                            <span class="fas fa-plus me-2"></span>
                            New Connector
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="row g-2">
            <div class="col-12 col-xl-10 order-1 order-xl-0 w-100">
                <div class="card shadow-none border my-4 w-100" data-component-card="data-component-card">
                    <div class="card-body p-3">
                        <table id="example" class="table table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th style="max-width:60px;">No</th>
                                    <th style="min-width: 250px;">Name</th>
                                    <th style="max-width:160px;">Action</th>
                                </tr>
                            </thead>


                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade"
     id="connectorModal"
     tabindex="-1"
     aria-labelledby="connectorModalLabel"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="connectorForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="connectorModalLabel">Configure Connector</h5>
                    <button type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <!-- Name -->
                    <div class="mb-3">
                        <label for="connectorName" class="form-label">Name</label>
                        <input type="text"
                               class="form-control"
                               id="connectorName"
                               name="name"
                               required />
                    </div>

                    <!-- Type -->
                    <div class="mb-3">
                        <label for="connectorType" class="form-label">Type</label>
                        <select class="form-select"
                                id="connectorType"
                                name="type"
                                required>
                            <option value="" selected disabled>Choose type…</option>
                            <option value="mssql">MSSQL Database</option>
                            <option value="email">Email</option>
                            <option value="proxy">Proxy URL</option>
                            <option value="apikey">Api Key</option>
                        </select>
                    </div>

                    <!-- MSSQL fields -->
                    <div class="type-fields" id="fields-mssql" style="display: none;">
                        <div class="mb-3">
                            <label for="mssqlServer" class="form-label">Server</label>
                            <input type="text"
                                   class="form-control"
                                   id="mssqlServer"
                                   name="server" />
                        </div>
                        <div class="mb-3">
                            <label for="mssqlUser" class="form-label">Database</label>
                            <input type="text"
                                   class="form-control"
                                   id="mssqlDatabase"
                                   name="database" />
                        </div>
                        <div class="mb-3">
                            <label for="mssqlUser" class="form-label">Username</label>
                            <input type="text"
                                   class="form-control"
                                   id="mssqlUser"
                                   name="username" />
                        </div>
                        <div class="mb-3">
                            <label for="mssqlPass" class="form-label">Password</label>
                            <input type="password"
                                   class="form-control"
                                   id="mssqlPass"
                                   name="password" />
                        </div>
                    </div>

                    <!-- Api Key fields -->
                    <div class="type-fields" id="fields-apikey" style="display: none;">
                        <div class="mb-3">
                            <label for="emailAddress" class="form-label">Api Key</label>
                            <input type="text"
                                   class="form-control"
                                   id="apikey"
                                   name="apikey" />
                        </div>
                    </div>

                    <!-- Email fields -->
                    <div class="type-fields" id="fields-email" style="display: none;">
                        <div class="mb-3">
                            <label for="emailAddress" class="form-label">Email Address</label>
                            <input type="email"
                                   class="form-control"
                                   id="emailAddress"
                                   name="email" />
                        </div>
                    </div>

                    <!-- Proxy fields -->
                    <div class="type-fields" id="fields-proxy" style="display: none;">
                        <div class="mb-3">
                            <label for="proxyUrl" class="form-label">Proxy URL</label>
                            <input type="text"
                                   class="form-control"
                                   id="proxyUrl"
                                   name="url" />
                        </div>
                        <div class="mb-3">
                            <label for="proxyUser" class="form-label">Username</label>
                            <input type="text"
                                   class="form-control"
                                   id="proxyUser"
                                   name="proxyusername" />
                        </div>
                        <div class="mb-3">
                            <label for="proxyPass" class="form-label">Password</label>
                            <input type="password"
                                   class="form-control"
                                   id="proxyPass"
                                   name="proxypassword" />
                        </div>
                        <div class="mb-3 d-flex align-items-center">
                            <input class="form-check-input me-2"
                                   type="checkbox"
                                   id="proxyRequired"
                                   name="required"
                                   style="margin-top: 0;" />
                            <label class="form-check-label" for="proxyRequired">
                                Required
                            </label>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-secondary"
                            data-bs-dismiss="modal">
                        Cancel
                    </button>
                    <button type="submit" class="btn btn-primary">Save Connector</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const typeSelect = document.getElementById('connectorType');
        const fieldGroups = document.querySelectorAll('.type-fields');
        const tableBody = document.querySelector('#example tbody');
        const modal = document.getElementById('connectorModal');
        const form = document.getElementById('connectorForm');
        const modalTitle = document.getElementById('connectorModalLabel');
        const submitBtn = form.querySelector('button[type="submit"]');
        let connectorData = loadFromCookie();
        let editIndex = null;
        let counter = 1;

        // Cookie helpers
        function setCookie(name, value, days = 7) {
            const expires = new Date(Date.now() + days * 86400000).toUTCString();
            document.cookie = `${name}=${encodeURIComponent(value)}; expires=${expires}; path=/`;
        }

        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return decodeURIComponent(parts.pop().split(';').shift());
        }

        function saveToCookie(data) {
            setCookie('connectorData', JSON.stringify(data));
        }

        function loadFromCookie() {
            const cookieData = getCookie('connectorData');
            if (!cookieData) return [];
            try {
                return JSON.parse(cookieData);
            } catch {
                return [];
            }
        }

        function showFieldsFor(value) {
            fieldGroups.forEach(group => {
                group.style.display = group.id === 'fields-' + value ? 'block' : 'none';
            });
        }

        function renderTable(dataArray) {
            tableBody.innerHTML = '';
            counter = 1;
            dataArray.forEach((item, index) => {
                const detailText = getFormDetails(item, item.type);
                addRow(item.name, item.type, detailText, index);
            });
        }

        function getFormDetails(data, type) {
            if (type === 'mssql') {
                return `Server: ${data.server || ''}, Database: ${data.database || ''}, User: ${data.username || ''}`;
            } else if (type === 'email') {
                return `Email: ${data.email || ''}`;
            } else if (type === 'apikey') {
                return `Api Key: ${data.apikey || ''}`;
            } else if (type === 'proxy') {
                return `URL: ${data.url || ''}, User: ${data.username || ''}, Required: ${data.required ? 'Yes' : 'No'}`;
            }
            return '';
        }

        function addRow(name, type, details, index) {
            const row = `
                <tr data-index="${index}">
                    <td>${counter++}</td>
                    <td>${name} (${type})<br><small>${details}</small></td>
                    <td>
                        <button class="btn btn-sm btn-primary edit-btn">Edit</button>
                        <button class="btn btn-sm btn-danger delete-btn">Delete</button>
                    </td>
                </tr>
            `;
            tableBody.insertAdjacentHTML('beforeend', row);
        }

        // Handle modal form show
        typeSelect.addEventListener('change', function () {
            showFieldsFor(this.value);
        });

        modal.addEventListener('show.bs.modal', function () {
            showFieldsFor(typeSelect.value);
        });

        // Handle form submission (create or edit)
        form.addEventListener('submit', function (e) {
            e.preventDefault();
            const formData = new FormData(form);
            const name = formData.get('name');
            const type = formData.get('type');

            let data = { name, type };

            if (type === 'mssql') {
                data.server = formData.get('server');
                data.database = formData.get('database');
                data.username = formData.get('username');
                data.password = formData.get('password');
            } else if (type === 'email') {
                data.email = formData.get('email');
            } else if (type === 'apikey') {
                data.apikey = formData.get('apikey');
            } else if (type === 'proxy') {
                data.url = formData.get('url');
                data.username = formData.get('proxyusername');
                data.password = formData.get('proxypassword');
                data.required = form.elements['required'].checked;
            }

            data.details = getFormDetails(data, type);

            if (editIndex !== null) {
                connectorData[editIndex] = data;
                editIndex = null;
            } else {
                connectorData.push(data);
            }

            saveToCookie(connectorData);
            renderTable(connectorData);

            bootstrap.Modal.getInstance(modal).hide();
            form.reset();
            showFieldsFor('');
            modalTitle.textContent = "Configure Connector";
            submitBtn.textContent = "Save Connector";
        });


        // Handle edit/delete buttons
        tableBody.addEventListener('click', function (e) {
            const row = e.target.closest('tr');
            const index = Number(row.getAttribute('data-index'));

            if (e.target.classList.contains('delete-btn')) {
                connectorData.splice(index, 1);
                saveToCookie(connectorData);
                renderTable(connectorData);
                return;
            }

            if (e.target.classList.contains('edit-btn')) {
                const item = connectorData[index];
                editIndex = index;

                form.reset();
                modalTitle.textContent = "Edit Connector";
                submitBtn.textContent = "Update Connector";
                showFieldsFor(item.type);

                // Common fields
                form.elements['name'].value = item.name;
                form.elements['type'].value = item.type;

                if (item.type === 'mssql') {
                    form.elements['server'].value = item.server || '';
                    form.elements['database'].value = item.database || '';
                    form.elements['username'].value = item.username || '';
                    form.elements['password'].value = item.password || '';
                } else if (item.type === 'email') {
                    form.elements['email'].value = item.email || '';
                } else if (item.type === 'apikey') {
                    form.elements['apikey'].value = item.apikey || '';
                } else if (item.type === 'proxy') {
                    form.elements['url'].value = item.url || '';
                    form.elements['proxyusername'].value = item.username || '';
                    form.elements['proxypassword'].value = item.password || '';
                    form.elements['required'].checked = !!item.required;
                  }

                new bootstrap.Modal(modal).show();
            }
        });

        // Initial render
        renderTable(connectorData);
    });
</script>