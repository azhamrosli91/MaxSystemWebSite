@{
    Layout = "~/Views/Shared/_Layout_new.cshtml";
}
<style>
    /* Make the preview container scrollable */
    .dropzone .dz-preview.dz-preview-multiple {
        max-height: 200px;
        overflow-y: auto;
        padding-right: 5px;
    }

    /* Make image thumbnails 15x15 */
    .dropzone .dz-preview .dz-image {
        width: 15px !important;
        height: 15px !important;
        object-fit: cover;
        display: block;
    }

    /* Adjust text and spacing */
    .dropzone .dz-preview .media {
        padding: 5px;
        font-size: 12px;
        align-items: center;
    }

    .dropzone .dz-preview h6,
    .dropzone .dz-preview p,
    .dropzone .dz-preview span {
        font-size: 11px !important;
        margin-bottom: 2px;
    }

    .dropzone .dz-message{
        margin : 0px !important;
    }
</style>
<div class="mb-9 w-100">
    <div class="row align-items-center justify-content-between g-3">
        <div class="col-auto">
            <h2 class="mb-0">Ai Resume Screening</h2>
        </div>
        <div class="col-auto">
            <div class="row g-3">
                <div class="col-auto">
                    <a class="btn btn-phoenix-secondary" href="../AiResume/History"><span class="fas fa-history me-2"></span>History</a>
                </div>
            </div>
        </div>
    </div>
    <div class="row g-2">
        <div class="col-12 col-xl-10 order-1 order-xl-0 w-100">
            <div class="card shadow-none border my-4 w-100" data-component-card="data-component-card">
                <div class="card-body p-3">
                    <div class="mb-3">
                        <div class="input-group mb-3">
                            <input class="form-control" id="txtTitle" type="text" placeholder="Job Title" aria-label="Job Title" aria-describedby="button-addon2" />
                            <button class="btn btn-primary" type="submit" id="button-addon2">
                                <i class="fa fa-paper-plane"></i>
                                Submit
                            </button>
                        </div>
                    </div>
                    <form>
                        <div class="row">
                            <div class="col-12 col-md-6 col-xxl-5 col-sm-12">
                                <label class="form-label" for="exampleFormControlInput">Job Description </label>
                                <textarea id="txtJobDescription" class="tinymce" name="content" data-tinymce="{}"></textarea>
                                @* <textarea id="txtJobDescription"></textarea> *@
                            </div>
                            <div class="col-12 col-md-6 col-xxl-7 col-sm-12">
                                <label class="form-label" for="exampleFormControlInput">Upload Resume </label>
                                <div class="p-4 code-to-copy">
                                    <div class="dropzone dropzone-multiple p-0" id="dropzone-multiple" data-dropzone="data-dropzone">
                                        <div class="fallback">
                                            <input name="file" type="file" multiple accept="image/*,.doc,.docx,application/pdf" />
                                        </div>
                                        <div class="dz-message" data-dz-message="data-dz-message"><img class="me-2" src="~/images/icons/cloud-upload.svg" width="25" alt="" />Drop your files here</div>
                                        <div class="dz-preview dz-preview-multiple m-0 d-flex flex-column">
                                            <div class="d-flex mb-3 pb-3 border-bottom border-translucent media">
                                                <div class="border p-2 rounded-2 me-2"><img class="rounded-2 dz-image" src="~/images/icons/file.png" alt="..." data-dz-thumbnail="data-dz-thumbnail" /></div>
                                                <div class="flex-1 d-flex flex-between-center">
                                                    <div>
                                                        <h6 data-dz-name="data-dz-name"></h6>
                                                        <div class="d-flex align-items-center">
                                                            <p class="mb-0 fs-9 text-body-quaternary lh-1" data-dz-size="data-dz-size"></p>
                                                            
                                                        </div><span class="fs-10 text-danger" data-dz-errormessage="data-dz-errormessage"></span>
                                                    </div>
                                                    <div class="dropdown">
                                                        <button class="btn btn-link text-body-tertiary btn-sm dropdown-toggle btn-reveal dropdown-caret-none" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="fas fa-ellipsis-h"></span></button>
                                                        <div class="dropdown-menu dropdown-menu-end border border-translucent py-2"><a class="dropdown-item" href="#!" data-dz-remove="data-dz-remove">Remove File</a></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                    <hr />
                    <div class="mb-3">
                        <!-- Your table -->
                        <table id="example" class="table table-striped" style="width:100%">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th style="min-width: 120px;">Phone</th>
                                    <th style="text-align: center;">Match Percentage</th>
                                    <th style="min-width: 300px;">Short Description</th>
                                    <th style="min-width: 80px;text-align: center;">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
 
</div>
<!-- Disable autoDiscover BEFORE Dropzone loads -->
<script>
    window.Dropzone = window.Dropzone || {};
    Dropzone.autoDiscover = false;
</script>

<!-- Load Dropzone -->
<script src="~/vendor/dropzone/dropzone-min.js"></script>

<!-- Disable Dropzone auto-discover -->
<script>
    window.Dropzone = window.Dropzone || {};
    Dropzone.autoDiscover = false;
</script>

<!-- Load Dropzone -->
<script src="~/vendor/dropzone/dropzone-min.js"></script>

<script>
    let myDropzone;

    $(document).ready(function () {
        // Prefill Job Title & Description from localStorage
        const storedTitle = localStorage.getItem("ai_job_title");
        const storedDescription = localStorage.getItem("ai_job_description");

        if (storedTitle) {
            $('#txtTitle').val(storedTitle);
        }

       if (storedDescription) {
            $('#txtJobDescription').val(storedDescription);
        }


        // TinyMCE Init with optional set content
        // tinymce.init({
        //     selector: '#txtJobDescription',
        //     plugins: 'lists code table',
        //     toolbar: 'undo redo | bold italic underline | bullist numlist | code table',
        //     menubar: false,
        //     branding: false,
        //     license_key: 'gpl',
        //     setup: function (editor) {
        //         editor.on('init', function () {
        //             if (storedDescription) {
        //                 editor.setContent(storedDescription); // ✅ Correct way
        //             }
        //         });
        //     }
        // });

        // Dropzone Initialization
        if ($('#dropzone-multiple').length) {
            if (Dropzone.instances.length > 0) {
                myDropzone = Dropzone.instances.find(dz => dz.element.id === "dropzone-multiple");
                console.log("Dropzone reused");
            } else {
                myDropzone = new Dropzone("#dropzone-multiple", {
                    url: "/dummy", // dummy; real upload is manual
                    autoProcessQueue: false,
                    addRemoveLinks: true,
                    acceptedFiles: ".pdf,.doc,.docx,image/*"
                });
                console.log("Dropzone initialized");
            }
        }

        // Initialize DataTable
        const table = $('#example').DataTable({
            initComplete: function () {
                 $("#example").wrap(`<div class="tr-scrolledDataTable h-100"></div>`);
            }
        });

        // Submit handler
        $('#button-addon2').on('click', async function (e) {
            e.preventDefault();

            const $btn = $(this);
            if ($btn.prop('disabled')) return;

            // Lock button
            $btn.prop('disabled', true).html(`<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Submitting...`);

            const title = $('#txtTitle').val().trim();
            const jobDesc = tinymce.get('txtJobDescription').getContent({ format: 'text' }).trim();
            const files = myDropzone?.getAcceptedFiles() || [];

            if (!title) {
                alert("❗ Please enter Job Title.");
                $('#txtTitle').focus();
                resetButton();
                return;
            }

            if (!jobDesc) {
                alert("❗ Please enter Job Description.");
                tinymce.get('txtJobDescription').focus();
                resetButton();
                return;
            }

            if (!files.length) {
                alert("❗ Please upload at least one resume file.");
                resetButton();
                return;
            }

            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                const formData = new FormData();
                formData.append("jobDesc", jobDesc);
                formData.append("file", file);

                // Optional: show progress bar
                // $('#upload-progress').show();
                // $('#upload-bar').css("width", "30%");

                const tempRow = table.row.add([
                    'Uploading...',
                    '',
                    '',
                    '<div class="text-center">Uploading...</div>',
                    '',
                    '<div class="text-center"><span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span></div>'
                ]).draw(false).node();

                try {
                    const response = await uploadResumeAsync(formData);
                    table.row(tempRow).remove().draw(false);

                    // Save Job Title & Description
                    localStorage.setItem("ai_job_title", title);
                    localStorage.setItem("ai_job_description", jobDesc);

                    // Save Resume Results
                    const existing = localStorage.getItem("ai_resume_results");
                    let resumeResults = [];

                    if (existing) {
                        try {
                            resumeResults = JSON.parse(existing);
                            if (!Array.isArray(resumeResults)) {
                                resumeResults = [];
                            }
                        } catch (e) {
                            resumeResults = [];
                        }
                    }

                    resumeResults.push({
                        jobtitle: title,
                        name: response.name,
                        email: response.email,
                        phone_number: response.phone_number,
                        percentage_match: response.percentage_match,
                        short_description: response.short_description,
                        timestamp: new Date().toISOString()
                    });

                    localStorage.setItem("ai_resume_results", JSON.stringify(resumeResults));
                    table.row.add([
                        response.name,
                        response.email,
                        response.phone_number,
                        `<div style="text-align:center;">${response.percentage_match}%</div>`,
                        response.short_description,
                        `<div class="text-center">
                            <button class="btn btn-success btn-sm" title="Shortlisted">
                                <i class="fas fa-check"></i>
                            </button>
                        </div>`
                    ]).draw(false);

                    // $('#upload-bar').css("width", "100%");
                } catch (error) {
                    table.row(tempRow).remove().draw(false);
                    alert(`❌ Failed to upload ${file.name}: ` + error.message);
                    // $('#upload-bar').css("width", "100%").addClass("bg-danger");
                }
            }

            // Unlock button
            resetButton();

            function resetButton() {
                $btn.prop('disabled', false).html('<i class="fa fa-paper-plane"></i> Submit');
            }
        });

        // Ajax wrapper
        function uploadResumeAsync(formData) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    url: "/AiResume/UploadProxy",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        console.log("Upload success:", response);
                        resolve(response);
                    },
                    error: function (xhr) {
                        console.error("Upload failed", xhr);
                        reject(new Error(xhr.responseText || xhr.statusText || "Unknown error"));
                    }
                });
            });
        }
    });
</script>
